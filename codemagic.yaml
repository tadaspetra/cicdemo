workflows:
  default-workflow:
    name: YAML Workflow
    max_build_duration: 60
    environment:
     vars:
        CM_KEYSTORE: Encrypted(Z0FBQUFBQmZnYmJ0Z1d4UG1zbE1sM3B4dzJLcmtNR0lqVGIyZkNfajRkRzlEdTBON1R6a3cyQVdmMURhZ0M4V19EeEU0dElZOGFRaEl1LThMOEt6MlNSeERRZVVvTEo2blBJbDNmV1J3ZFRhaHdETm50QlpCalkwNDQtR1B2TnJMQTBEejF6S2g2Nk11S3hLWDZvYlFOck9aLUNGd043VmJ1b2lmc1RZc1pjQzF3ZGlMR09YSk1lX1p0WU9iS3BlU3hGZkVvSmNmc3F1RzE5VjVXMWpEQ2dmdE9KSmZOdWlhSjA0RU92ZHVyMk16aFNYTWpNVmtLeTZSWmJISHJ3SkxWUW9SSXREQjQ0RXoxd1k0YWZrclRWeEtFeEo2TUVfdXVweko3dDN3d1k3eTdQZ2otcWZnMXk2MGl5QlUxcmFDcU9sdTJTTURrbDhBWWRQOUVnc3dORk9ha0J2eE9XT3lka05GR2tkZGNZNkh6cUtwRXRRYkVRWVQ5dG9YQ085NFdQV2czX09xRTNidFRsc2VpNFlYRGZqUmZNODNmN1F4eFJ2cXBadHdUZ0lVWEp0ZmNHc3d0dUVsdExkNU1xUGJQZEMxTnA1bWk1OVdiOEdGRHN4X01haVJYeDJDUlFJN1o3R1daMEhlMnExNTVZeXM3cjM5WWxTQmNMTHBpMlNkTGI4OXV0SExqaVhGZV9VQWRPT2hlcXB4MUdad1UycmxXeG02dXB2WTc4MmxBM01DaV9VanUyV1NQQnc3QnNTelJsVVBHOEYyMEJWTlQwMEtkLXQxR3JBNjVRdjFydHB3S0VRb1ZPc2RHN3JWc3NUN29WRzFlMjkySGo5MW5aN2RHTWNJakVIb2ZOSk5YejhsekRORExweDFsMHRFNG1uN1ZfWUs2YVJDU19SX1pVSmdaQXhUMjIwQ2dpSUwwZzFibnhiUjlWMGEyb3M2M2FreldhdUdqbTJXcHRkcVlOTXE5dld6YVIwTDFVcGNsUjlhaW1Wb2pjM2lXMnVjdFBCZVdnTUtpOGZHNGZqZE5kYWZSUEZGcWhXSjNQQzR4NjRlWHRnc09QNDB4MUpuTnR2VFlrMG5zUkowaG5YbldkSzZ0Zi1fVm1zOU5JZjBhVW1Gb01CQVVPUWFOVHhuUjh2REFzVV9KRVUxb29SdVFJRElmbmVwc2JRSnVKb05PX3RsZXZFYTl1Y0EzYktuSERfSFJGc1pyNmE0cTRXMUtaT1BYODRldzhYMXBuZGF0MTdaQ05Yc0V3MXlYd2lnTjM0c1VHZVoza01kY2R3ZVR0a0tkeG1Hbnp6TEN1YzVHd1RQQ0dwWm1lX0ZBTnF5X1Jfbk1vZHc1YncxWXZwbmFpdzRHeVFtV3Z6ajVnUHJXVnhpR3N3dFV2UzZmUGhzS1ozT3BOYVR1TGVHcWNtbVc5OEdxMEdsVUtOVWRFQmNKSm5GYUZ0ZmJIYXVuNjdsck41QmRXeTZUYnI1WFp1VE5MaEo3SVF6c0VRSzgyVnZ2V0I5U0Z2TVVQX2l6aENGY1E5MmRsNk1DNENxbm4yc1lENC1mVDBGS2Nlc0FMSDc2U05YejhBbzVUUFRtcWxVamFKYWtvaUdILXZuSVhhZ2JRWWNBM0ZVSDJ6WmQ0UU5QRHJQYTJVX0lzbko2QVlmaTZiR0hRS1hoendMSHVXVThMWV9QLW1HNUFSeERWdk1tSUtUR0h2ZEFIVTBkWnNPYlltX3JaTjhfd0dVSVBOWFZzRDVhbDZFUENyMzk0RHNpSzR4Y0RyejlJVkxtak9UWFRQeXZULTZFdE1xdTVsYnpzZGpacS0zQXJKelFTMDFlbUJRcWcwLWtDRDR6UHpDcXJiNi0yLTJPczhrNUtqY1l5QWc1eFVRVzU5OVZaQW02cm9WYk5aT1pmLUFnWFlrVjFwWUh6QmxERXVoZ19GOVRxcXJRMkRoZWlQajhNdktabVhRY3BDZEFjSnBEanU3VzhzQnEtb1p4MzFuT3dsMUQ4QXd0ckd5VzRwVHFTTV9XbGtiX1NjNFBXOFVEWGswUXhMZjJVM1Z0SmhTcy1nOGotdS01cWNpV2J0aTZZcWRjSTFwM3F3Rm1RTXI0ZWhYOTlYNXdmVndOdnlkT1d6eGxaWTFibTc0TEhPSVlSRFlCWmg3MkJ6cnFRMjFDeE1qaGtNUUZRWkZnNUgyUDVLaXpvWk5QOTFCaHVhUmJLdU9oeU1GTy1QbkxPUkJGbjJtTDBuQUNyeG45R1NDZkJPUVY1TldjTTNmVVQxTmhDTURCeVJPc1lkQm53cEd1RDlQT0N6VjB0ZWZCbzQ0aXRnMDNHWTlidkphZTB0SkExZmxQLXg0Z0FZbGpZc2xaMy03YmRoM2hVbHZNSjQySGxMaDlTUFdjVlNVbWhYQlpGTF9MRGFXSDc3d1FaN1F5d0ZncDNHQ1NEei0zek5HYW9TdmxFcmhJSDlNRm5zWUVCOUlmOUtzcFdiNUZSbDFsc0ZXS0M4cWE4Ql93cTdZSzBjbS1YSFNYNloxZnFVSEpET0Fvb20weGd2cVJ0OWEzVnhSLU91aERfRDlTZWViQVpna2pNZDlqTTRmR1N3RXo1ZnFZYUk2djdKVTZkdUxNZ2pRRTM3Y3NrR1JyMDJlZU95Z2Z1eVViNVhLelU2c2lJMXJsRWt6akpoTi1OZlVrRUo5V2F0LXNQLTE0Q2ZFcFRSUjI0OFRxZ3ZLNWZjdmlFUURuRm1VNGk4YmN4bXFiMU54dzZYNS1acC1SWHBpamZiby1GazRvODJHT1gxNG5jaGRON1VWM3ZQVWl1eWQxd2FRWTdyYUJuZERjSEdYVENTdGRyNERtV1dzTlFoVy1DQVJSYlhoMDN6XzRITTEzVmpoLUxmNktOZDhickxGblRvUVFwMzloV0tGVDdnX0dTcnpJRVNHaFVCQW5JX0tOWGczMVlaTFBiRlRIMXlxbTB1R2JLdnVkTnVhakNVRmxBZHVyTnBzWU11NEZ4QkZGQl9kNHpZZDl6X2M5cTk0cDlXODFvMll2aEpyUFUxS1pXUVVsS19VX1pIMU1ZclI2VWVoNXNxVWhFZnE1OXFDZ3YtaXZLTERxU3c2S1BabnpnOFo4TlNKXzhkX0tEYlZyOVViV25NYkU2eFVWdlJfNVgxYjVJTzNPeW1DRGJCVFd5ZUNlMFMwMlh0WExWN3VnNjRlV2R2a3E3VlFPQWlDM0JiaEUyOUthTDlzNWo1Q2Y4bDgzZXRlQ3VXR25xVWpsZi11YXB0V1hMTHRrWkhkbWRBUTF0cUEyX2ZQSWQ2QzRjdHZkQXA3NXVxSDUzbmNZNjBuNWUtZF9aUGQ5S1VjQzdZWXpUSHJIUzJrMTBiNHczTTY0SHZZZ21UdGtZX2J4RHJfQjJUdld0TGo3eUp5WWQ2WjIzMzVaWmh3clppMC1MNlBqMEpaVFNUcDM4UHlGVkpiWU9zbmhob29odWkxN0RkcHBwZkhRdy1yekVoQkhVekI3c1B2bzNDMTFFb0JfOTd5SU4wYVZHY1k5a3ktX3hxOWdLVTFLLUtwWTRKbmwtQ1diT2RYRjc5b094cFV2azZDQkhNbGFYZUIwV3NabVpfa2pNU09tY2x5UkJhOUxjN1NRY3RaUW1kekRSZjdZT3phLU04QlRnSHJ6UldCdE95dHFmSXJrNXlhMWNEdmpaeHRLelp5NHJMOWM3endIZDNqTXMyTDZpY2VZZXdCR2UtNUJmYnBlVi1PMTNGWHNZd2w1RktoTzRCaWQ1Q3l1OWJMOElDX1M5X3dfU3BNY295QjM0emJFTGdod2R0cnlBdS11QV9udXNXRXZsNXFySmlZUlMyNzRZaVlrSkRoaFRLVDNlcDYzMXNDS1Q4SllpY2NwR05NdEJsejVNdGMzV0ZjSmZBYWNtdDh0SlFhZ252WXpDOEN1U3hOOWcxclVGLTRHdjF0bi01SU9HYlRzYmt1VEtPckhiZGtoaW5nNE5iWnI1ODFKSFltVVZjeWlMRlFyRkVBWmlfekZRM0Q5NGYtWWtGQWVvZWVJam9UU2dfSnVkbFI4UTBfZTRWR0YtZG01NlhhX1pLOEcza0tnRGV4Yk55Q2hMUjVvT2tId0JFSFp3RlBGVEplYmxDTlhWUFBDbXdXN0c5TnVqajhYS3M1eW1GaDZHR2xnSm1tWVZJeThqWmprX3B6cjR2cnJCM2ZmUTRQNWlWRElwZmFFVGNNQVBrbVhZT29tZWNhRVBkSWFCYTdOcUZVY0F4b21mR0lpWm1WM3U1M0hUNmhqcFJBbi1GWVdWSVBmSlp4U090ZjdXZWs5RmhUZVR0YkFHR1k3dVdMbC1Vb2N3NGJEOHFxZzN2VWhiRlBLLUwyUzFYb0tCM05wNDBtSk9FMHN4OHNqUEwxUjVBM2tVOGpJY3NiUEpUbmhhaVd3T0xZaE1rNW1pb2ltWkhnWGRNTjNkZGsxcVpfaG5tSmlnNmtLR2FFNTNIYTZKWmN3ZE93WU1WbEZ4eXFPNXJLTGltWXhtc04zWnpHeW14OFhCVWNyclg2OGN2Y1lPUGVGMVgwNzFvTUpfdkV3Nk5jX2IwUVBVak5WcHhKaHBoMUtDWno2bW5VZnNtVWtkdzRleW9BM29GVWJ2d2pMa0VSRzFXU0ktQTRyUHZDYm15XzRiTFdlMVlURl9LUWVReW9BM0tiT1JYMHNrT2k3WEVFeXNGcmc5dnVKcEJleU5rMVhHT05sanpXQ1Y4UjdNeDYyMkxFcVhVbU9rRW13QkFBSGRRaGlLQ3RuSzNDblo0bFFTRW5ZM3NDdVcxd2lVS3Z5TkVzakRqa0xSZFBlY1JFcGNqQ0FHQm5zelBhZk5HWGV0QUw3dWtCN1RHQU5XYkY5cldDRlhmLV8ydVdsanZuNHZ2cm1CWWtiZ0E0azhmbVd3RFBFa3RWdGdfMV9DaVc4X2liazlVSVJZRnRscWFHQmRSd3U2c3c3Nm5WUDI0VnFEX1RlaUxyTGpZT0hfQk5uTTRfdGUwSmJZMUFVdTdnZmlpZURDMkZZMVBhT0lsUGhvcjFSNFFtZjVkSl9XaVFMTkJ3aTFhc3h6RlpNc09UVHRLOHpwX2R6MXFRalFudHhNOC1NcFE0cjJpNm4wZnFNWnhTRnlWSlN0N3Z3WDNEVFNIWTFLTjBjU3VPQk9WVzJiVWFvckRfcEpIYU4wOXBPNk5lLW9uSmlhUDN6UnRPZW5OR3dGNnVSOFNCYzluTFVQVGRnd1FHWkNtNzFzMFlqTFVXNlA2anM2UUFQRVAxd2dVR3J4cEVNWHRmTTNJd3FpbUhaMk1BX2J4Ni02d2V0c1pVZlhGSzdVcmp2QVdzTU9yNEhvVVQxRk1EUmREMTFLR1MzNEVnMGhxdndpaHJ6N3QxNjU5M0tnaEZaYnJWdzdFcFN2ZUpZdS1ZTXUxb0xURUJtemhaNm94VTdxaFNGcXQ5S3VBLVp4NHMzbU9oRDFYVkRFWTlWYWg0MnVFSG1wQWs5TGNRNUJFS3lSYVFjN1p6enNoWE8wSnVDdERfX1FtN0hZS1BXUzJGQmtjUlotZUMxd1pCZGNmTWVHOFQ0NV9WUVNfd2lKUlp4bFY3SzdiZUZVVzN1YzRiOGFvWFFfbkRxV1NVenhOT19iaHUtaHNxWHgzSTBUQTdTMjRadjBxb0NQOHMxU2gzcEVxbGtleFJZaHVJNWw0S1otSFhzR3BWbVluS3lBTVpDcjh6RlB1dG43cFVRZnNWTllRWHJDV2VQODU3R05oeGdJQktkQnA5NFcyQ0o5ZnJCelBnTWE0bnlKSEpMYWFhSGo4Q1BRVEZnZ1FqSmNDZUdRVjF3TE5LdGNrMXNUUGNWb1ZfcXpGSk9zWURqMWQtNkhhZk5uaEJxSkMyTDZ3LUtoSFNxcGEtcHB4Ui1NQm9jQjl2XzVQT09VenpVbDdLaVBxRXdqZHFtZTZ5bW82LWZPbUJKdVhSV0lEYTY1V3BEMUlSa09SR0NPR2hydndfOTZpSFNZMk50LVRsSG9XbGcxbUxOZVNCMU42NGVEVHU2aDlVaUZuUVNxZlBwMGp3ZDhFN1A5VXRJcHd2NnRPaGRUNEF6QzZLcEVjUWI0TThLOUg0YzV3U3NkaFV3VjZsUzVqRzlzN2tiOXhQV3J4WkQ1enB5V0Z5c2RCWDY4Ml9nX0dCTUNTYlFNbVE2NDBYZjdBazNQckpMaW1vV2NUM09LRjNnc1RZRWtxaEx6ODc2eWlRS25keWtTRENzUEZGMFk2UjdPS3llZUZKVXpwYmc9PQ==)
        CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZnYmJ0ZERkdFgweWFCeG1mSXo3dWh1anMzVl9nNm53bVVzVlBjSDV6REJLdlpSdTVEbnJBeF9zRGt0LVE5azZkcDZ0TzRsQjNTQUtPdmVGVVZFRVFCQWtrdUE9PQ==)
        CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZnYmJ0VjlFMlhNSlNBZUZReXZtMllUTmJOTHFJb1F1NlBpbE5TUWc5eThoNmkwNVJNQWJGZHhOYnQ2bmdEVnhkcll3YnI2UEtGY1hMMVdJV0dKMmR1cFV6SUE9PQ==)
        CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZnYmJ0aFFPNkV4cW1nN3hNNTJKeXcydkl5T2NidzFzNzR3Wm9VbmtRT3pXbW1OUzhab1VVb19UVWdZTTI1ZlpvTUdqb21yaFhWOG9TQUloaXVaTXhZWTRKTmc9PQ==)
        APP_STORE_CONNECT_ISSUER_ID: ff7a107c-a364-4416-90dc-193e5902ee6d
        APP_STORE_CONNECT_KEY_IDENTIFIER: Z7SVJ3FS57
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZnYmJ0d3FXZkZqbkVNaFV0Qk1NXzdqQ3RJMkx5QzNDTnNNcHZ4YmY3WkhucTlhVHYxRGJ0OTRrRFlBaUZEYXZlWHBDdExOQzhTYWQ4ZHA5ZHlhbkVjYUxud2lNRmtNLTdOSF9vVkk4V21JRWkyZDUtUmhmc19ISDJWSEFkd0Q2WVFRY3hWN25kQ1NDa3NwQkIza0Q3N3RQY3RLd2tFZ2NybUdYVE5rcURZOVRSb1lES0xIcFZGbWw4SUh3WllocXRkb3dpdTBvMTVZLVZhQ1JVNlpPeHRMSjlMY0ZIbm10MWU3U3lkWjYyTlk5Y0FtelVwc1Z4SjR6SU9RcUxvV3lZdzFneG1hMFZJLWFCcmhkR2lRLVFNblVrbGpfVW9pakpoVXAtLUJpNW9mVHdKckdtNVYzcmpOUktzYTJyd184M2tKcUxMSXZlRmlYSl9Bd2pnUHBqWklORmpzRDBGZEZ5NEZZQkZXcGJNaGgxeVBRY1dOYThMd0hQeVg2VVZYQVByRzdvbk84blc0a3pYelZCX0lsWGh2MXFHc1ZTUENRQmdxWnd4THFjekN6aWVRND0=)
        CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZnYmJ0eHRKRUJNRzdQQXpqSnVzZWExNTQ3eTZDemF1ZXMwVHJEUHEzd05KYmFYblktUzQ5Qkw5VmFZcWo2aHJCelNhZVRyallETkJRRjFPQm1BWHlXbWpNdE9OQXZmbDNTejFjci0wcF9OdHF0X2pOTVl4OEdfalhfcm5LMlNzMVByRWxxV0VobGlxZ1ctUWotTnN2OXVydTU3Wk1ZRTVkTktnQjlmQnZKUXlab0I1aTdMeVRKZllERmNsSXBBd1VHTUVrTWE4dldKYmtGYTQ4SmJiNHFFWGRWa1pTb1NmRGRKOC1LNm5Kc0xDcUI0ZnNNR1IzdW1LeU9MX01Da1p2eHI2Y000X3BfWTlzVjVSN3U1QzRGUHF3TlZ5cVkwd1VNS1ZzbHRfbmVDRWxGR2VvWGpBWEpjclM3YldMVHoxdmREdGVBMGFDbUtfd1NyRGh0cHY1WDR5UDRJUS1GSk1ubUlGMkZsSjI0TF9hSEhLdHZ0Y1EyZnFMUXd0Q0lLREtRUXU5Rzh2STltLUdwdHZDQjhxVTh0VllDWEhqMkRVUkh0SmUzbUlYX2RNc1lYUnhVeXRUS3VVaUFBMU5HVC1wZUt0TDlxTDZabDZVSEdhS19Dd2tnMWpMbVUxUjBKcEk5VlFqOVBZX3daTnVuRE1wTGt5MDFzMnMxNmsxdVNMX3hfSGM4bk5kZ01sR0dNX1dPMzh3THVSNDJ2UFh2czdla2stcm1qczlIZjRubjlGQldodUFGXzZjbDNvS2lfY3JxbER3TXFCd01CRi1OMEtXWlBtSzVsX3gzdkhTOHhBQjlqd0N4U3BnVkxWOWh0dTh4Z2g3RmpOQzhMYl9UT1k1RkRzLUZERE5CNFcyS2VsY0szbHFrUGIyT0R6VUFGNVQxQUJkRlp1VUQ3dzFjcHpMR3F1TmxQTlVZQnRYQU1EOTVIdm1TNDY1RVNicDlqSkN6SmZfa2hCLVFqd2ZPRmtEcWJXSmZjSGkzdFg5N2FybWhHNlFQQ0oyczZBQUZ3cjVTZVZvMUNqUU1kLXV6Ty1IOFZTQ25aU1o4RXdsSUhHRVlSX1BXeW5jbDA5TFA5S09XX3JBaGpwNktnS0hnMldPUjFmZnFxTkxUcGhFMDVpSFhJOUxqXzFfTDAyRmFNNll0Q2IwUFp3c0UtbDc4UTMycFlJVlRYb2puLW1NYkt5VS1vUDFhX0dBakVRWW1jMXdqUTV5dDNsQ0xqaWpzR0JfREliNVdjZ1BzaGtqRXZwMV9hSS1kMGUzQ01taWI0eWk1OGp3UkdzeG15OXpLUDNlamJHaXdDWlowSENfS1BUY0pTUHdDUHJlTTVjeUx0d2RLU2k3NU9Dc0NDOFlaeVBIU2tJRmJsN1ZHd3pHWklLNDNicFNiSUlqVkJoZXhpeUFrTnhteXAzNS1QQUNsX2tBR3V2SFp1Z0V6TmMxcTh0dkVfVXRQQXg2Q1Z3STQtbE5ZM2pESWE4YW9Wd2dSZGhZRjRHeFhqWmJjQlZsQ1AxZ1cyQ1l5ZFA5cGo4b0luZmtNSFFkd0xYZ2JnelpaVFlEaUhnUGdObS1LR1g2cjF6VDdhMl9rY3ZUbHZnUjlWSXZfNUszaC1MUlJuZ3A1UkRtVURRR1FSOE5lRmpscVYzYnBlaFFxZmJPcDdseFpsS3VuZ2xjckhBNXRsQkJlbzVNWmpXOHJ6T2lEd3hmWnJsMFdoOUUtcjhBYUpienlHNGdDX0lLTEltbnRwWVp3N2ZHZU9UaFZTeUs0MXd6bGg5dlFCd1ZFa2NYdFJhN1pkVDlRSERDTnktWHNWODh4ajhUUFpHTzhuMWM5Y0FDSmx6US1uWmowLS1fWU95U3hZSF96ZTlpZ3hLZW4zSDV6YjZWTHNjRnQxWUNLb0E0S3AyM0VON3JRdnRIbzI5MTZRd3VSSGVBUFlZTEJENnNTVVNhc2NYOWJ1RThwSl9fT1l3X2RWTXNGemZ2b2EzeEZYaENybWI5N1lray1LOGRXSDdzcXZiSmdZVnhBaHBjUUlGRXRiU1JNUllCalRqQXJsa21UVE01bi0zQ3BUaXRxOTJWU2J5ZGFJME9VWnZHQU0yMF9EN2hjRXNkSnM0M3BmOXRMVzZ0OGdkUFZXcmJHUzFuMjVOcWRtTnNKUjVNdWp3eEx1YVVOSS1MZFdxMl9xb2ZQVDhkMUh3Qi02cm5PZEw4eWQtdUVxVWxyYUlzT0tFaFppQ29ZWmEzN194OFdrajY5QkljNlpBX0c2YUhfam9KYU1fOVBpbGktLXVnQy1OWlpYZWpHNzVRSlhKY0FfdURIR1lZTXlQWmdabGtpc1ExcXV3UXBLUUlscnlNWXJvdk9lTnk0XzhkN29fRmJWMGVLU3pNSWdkVGRfc3ZDSk00bUV0WkVVbkRWcTNiM1pELUxpNVpzLUk5aFpFZjhpVUdMbXdqd2xmRUJHU0VTNFBueDZuQ1dNM19PQUkyTUJOZ2xkeTdQTl9fdzFCcjNxM0VjY3lTUXJIMXZFbWxyRzhXcGkwY2l0RUtkWkhCaXRVY0FQU21BUUpXYnlqM1FHTDlWcW56NzV2TnJWaXk5TkZOdWVodnJ1ZDh3eFRXRU5IdFJ3TWRaQlB1ZkMwelI3LVZraDQwbkNNU1dHcDUtNG5MVFNKMDlPS1FDQ1BEZjV1NUFUbUxUeU5ZenF5MHFWRmZZS0NBWHZkdjhrQktMZGhmalVPTk15QW40UlNULUNGOHE3UjVaUmhqQjd4YWduakV6a3JHQkRnSHdCRUNZWHZjY3RCZFltajQySmx6d2NNRm1QZ0dveHNOTUJVVDhfRm5hOHVqWlhxOFROWFJmaTE5N3BHbi1VbTdQbG5od0R3RkNoMjQ5N3UwbmVadms1YTNCWnozQVQxTWpaWW43XzZSLXdKajMzS1pQWFB4NllXa1FZRE9pVGtLVnBDYkZEVlp0T1FEdVZRLVplM3I2bjNST1dQS0dDMDA1NkNOLVhncGZ0Q1JZcVNSbS1PSzdLbGFPc3QzZGhjVDJyZ1ZrbGZILUE2U3AwdVdnZ0lCeGJFVEY4b1gyM0JFNzQ0VmxQMGZBT3Nr)
      flutter: stable
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: '*'
      cancel_previous_builds: true
    scripts:
      - echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - name: Unit tests
        script: |
          flutter test --machine > test-results.json
        test_report: test-results.json
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - cd . && flutter packages pub get
      - cd . && flutter build apk --debug
      - find . -name "Podfile" -execdir pod install \;
      - cd . && flutter build ios --debug --no-codesign
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - connectwithamateur@gmail.com
